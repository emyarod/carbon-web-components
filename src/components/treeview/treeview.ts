/**
 * @license
 *
 * Copyright IBM Corp. 2022
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import {
  customElement,
  html,
  LitElement,
  //  property,
  // query,
} from 'lit-element';
import settings from 'carbon-components/es/globals/js/settings';
import HostListenerMixin from '../../globals/mixins/host-listener';
import styles from './treeview.scss';
import BXTreeNode from './treenode';

const { prefix } = settings;

/**
 * Tree view.
 * @element bx-tree
 */
@customElement(`${prefix}-tree`)
export default class BXTree extends HostListenerMixin(LitElement) {
  activeNodeId = '';

  focusTarget = false;

  treeId = this.id || Math.random().toString(36).slice(2);

  createRenderRoot() {
    return this.attachShadow({
      mode: 'open',
      delegatesFocus: Number((/Safari\/(\d+)/.exec(navigator.userAgent) ?? ['', 0])[1]) <= 537,
    });
  }

  resetNodeTabIndices() {
    Array.prototype.forEach.call(this.querySelectorAll((this.constructor as typeof BXTree).selectorTreeNodes) ?? [], item => {
      item.tabindex = -1;
    });
  }

  handleTreeSelect() {
    return this;
  }

  handleFocusEvent() {
    return this;
  }

  render() {
    const nested = this.querySelectorAll(BXTree.selectorTreeNodes);
    // console.log(nested);
    // console.log(
    //   [...nested]
    //     .filter(node => {
    //       // console.log(node.parentElement);
    //       // console.log(node.parentElement === this);
    //       return node.parentElement === this;
    //     })
    //     .map(a => a.value)
    // );
    // [...this.querySelectorAll(BXTree.selectorDirectChildNodes)].forEach(node => {
    //   console.log((node as BXTreeNode).value);
    // });
    return html`<ul>
      <slot></slot>
    </ul>`;
  }

  static get selectorTreeNodes() {
    return `${prefix}-tree-node`;
  }

  static get selectorDirectChildNodes() {
    return `:scope > ${prefix}-tree-node`;
  }

  static styles = styles; // `styles` here is a `CSSResult` generated by custom Webpack loader
}
